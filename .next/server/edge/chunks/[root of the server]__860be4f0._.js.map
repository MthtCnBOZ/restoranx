{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { getToken } from \"next-auth/jwt\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  console.log(\"Middleware çalışıyor - URL:\", request.nextUrl.pathname);\r\n  \r\n  const token = await getToken({ \r\n    req: request,\r\n    secret: process.env.NEXTAUTH_SECRET \r\n  });\r\n  \r\n  const isAuthenticated = !!token;\r\n  console.log(\"Token:\", JSON.stringify(token, null, 2)); // Tüm token içeriğini göster\r\n\r\n  const isAdminPanel = request.nextUrl.pathname.startsWith(\"/admin\");\r\n  const isAuthRoute = \r\n    request.nextUrl.pathname.startsWith(\"/giris\") ||\r\n    request.nextUrl.pathname.startsWith(\"/kayit\");\r\n\r\n  // Admin paneli koruma\r\n  if (isAdminPanel) {\r\n    console.log(\"Admin panel erişimi kontrol ediliyor\");\r\n    \r\n    if (!isAuthenticated) {\r\n      console.log(\"Kullanıcı giriş yapmamış, giriş sayfasına yönlendiriliyor\");\r\n      return NextResponse.redirect(new URL(\"/giris\", request.url));\r\n    }\r\n\r\n    // Role bilgisini doğrudan ve büyük-küçük harf duyarsız olarak kontrol et\r\n    const userRole = token?.role?.toString().toUpperCase();\r\n    console.log(\"Kullanıcı rolü:\", userRole);\r\n    \r\n    if (userRole !== \"ADMIN\") {\r\n      console.log(\"Role kontrolü başarısız. Rol:\", userRole);\r\n      return NextResponse.redirect(new URL(\"/\", request.url));\r\n    }\r\n    \r\n    console.log(\"Admin kontrolü başarılı, erişime izin verildi\");\r\n  }\r\n\r\n  // Giriş yapılmışsa giriş/kayıt sayfalarını engelle\r\n  if (isAuthRoute && isAuthenticated) {\r\n    console.log(\"Kullanıcı zaten giriş yapmış, ana sayfaya yönlendiriliyor\");\r\n    return NextResponse.redirect(new URL(\"/\", request.url));\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    \"/admin/:path*\",\r\n    \"/giris\",\r\n    \"/kayit\",\r\n  ],\r\n}; "],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,QAAQ,GAAG,CAAC,+BAA+B,QAAQ,OAAO,CAAC,QAAQ;IAEnE,MAAM,QAAQ,MAAM,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAD,EAAE;QAC3B,KAAK;QACL,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACrC;IAEA,MAAM,kBAAkB,CAAC,CAAC;IAC1B,QAAQ,GAAG,CAAC,UAAU,KAAK,SAAS,CAAC,OAAO,MAAM,KAAK,6BAA6B;IAEpF,MAAM,eAAe,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IACzD,MAAM,cACJ,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,aACpC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAEtC,sBAAsB;IACtB,IAAI,cAAc;QAChB,QAAQ,GAAG,CAAC;QAEZ,IAAI,CAAC,iBAAiB;YACpB,QAAQ,GAAG,CAAC;YACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC5D;QAEA,yEAAyE;QACzE,MAAM,WAAW,OAAO,MAAM,WAAW;QACzC,QAAQ,GAAG,CAAC,mBAAmB;QAE/B,IAAI,aAAa,SAAS;YACxB,QAAQ,GAAG,CAAC,iCAAiC;YAC7C,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;QACvD;QAEA,QAAQ,GAAG,CAAC;IACd;IAEA,mDAAmD;IACnD,IAAI,eAAe,iBAAiB;QAClC,QAAQ,GAAG,CAAC;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;KACD;AACH"}}]
}